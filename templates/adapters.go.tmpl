// Code generated by sqlc-grpc (https://github.com/walterwanderley/sqlc-grpc). DO NOT EDIT.

package {{.Package}}

import (
	"database/sql"
	"encoding/json"
	"fmt"
	"net"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgconn"
	"google.golang.org/protobuf/types/known/timestamppb"
	"google.golang.org/protobuf/types/known/wrapperspb"

	pb "{{ .GoModule}}/api/{{.Package}}/v1"
	"{{.GoModule}}/internal/validation"
)

{{$emitParamsPointers := .EmitParamsPointers}}
{{$emitResultPointers := .EmitResultPointers}}
{{range .OutputAdapters}}
func to{{.Name}}(in {{if $emitResultPointers}}*{{end}}{{.Name}}) *pb.{{.Name | UpperFirstCharacter}} {
    {{if $emitResultPointers}}if in == nil { return nil }{{end}}
    out := new(pb.{{.Name | UpperFirstCharacter}})
    {{range .AdapterToProto "in" "out"}}{{.}}
    {{end }}return out
}
{{end}}
{{if .HasExecResult}}
func toExecResult(in {{if eq .SqlPackage "pgx/v5"}}pgconn.CommandTag{{else}}sql.Result{{end}}) *pb.ExecResult {
	{{if eq .SqlPackage "pgx/v5"}}return &pb.ExecResult{
		RowsAffected: in.RowsAffected(),
	}{{else}}lastInsertId, _ := in.LastInsertId()
	rowsAffected, _ := in.RowsAffected()
	return &pb.ExecResult{
		LastInsertId: lastInsertId,
		RowsAffected: rowsAffected,
	}{{end}}
}
{{end}}